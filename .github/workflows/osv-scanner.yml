# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# A sample workflow which sets up periodic OSV-Scanner scanning for vulnerabilities,
# in addition to a PR check which fails if new vulnerabilities are introduced.
#
# For more examples and options, including how to ignore specific vulnerabilities,
# see https://google.github.io/osv-scanner/github-action/
name: OSV-Scanner

on:
  schedule:
    - cron: '16 5 * * 5'
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      
permissions:
  security-events: write
  contents: read
  
jobs:
  osv-scan:
  
    # uses: "google/osv-scanner-action/.github/workflows/osv-scanner-reusable.yml@75532bf0bf75464b047d80414dbce04449498365" #1.7.3
    # with:
    #   scan-args: |-
    #     --lockfile=pubspec.lock
    #     --format=json
    #     --output=osv-scan-results.json
    #     --skip-git
    #   # upload-sarif: false
    #   fail-on-vuln: true

  
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download OSV-Scanner
        run: |
          curl -L -o osv-scanner https://github.com/google/osv-scanner/releases/download/v1.7.4/osv-scanner_linux_amd64
          chmod +x osv-scanner
          sudo mv osv-scanner /usr/local/bin/osv-scanner  

        continue-on-error: false

      - name: Verify OSV-Scanner 
        run: |
          file /usr/local/bin/osv-scanner
          /usr/local/bin/osv-scanner --version
        continue-on-error: true
          
      - name: Run OSV-Scanner
        id: osv-scan
        run: |
          /usr/local/bin/osv-scanner --lockfile=pubspec.lock --format=json > osv-scan-results.json
        continue-on-error: true
        
      - name: Upload OSV-Scanner results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: osv-scan-results
          path: osv-scan-results.json

      - name: Set OSV-Scanner Results as Environment Variable
        run: |
          RESULTS=$(jq -c .results osv-scan-results.json)
          echo "RESULTS=Shikhar:${RESULTS}" >> $GITHUB_ENV
          
  notify-teams:
    needs: osv-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Download OSV-Scanner results
        uses: actions/download-artifact@v2
        with:
          name: osv-scan-results
          
      - name: Notify Teams Channel
        # if: failure() || steps.osv-scan.outcome == 'failure'
        if: always()
        # run: |
        #   RESULT=$(jq -c .results osv-scan-results.json) >>
        #   MESSAGE="{\"text\": \"OSV-Scanner results:\n${{ env.RESULTS }}\"}"
        #   curl -H "Content-Type: application/json" -d "$MESSAGE" ${{ vars.MS_TEAMS_WEBHOOK_URL }}
        #   echo "${MESSAGE}"
        # env:
        #   TEAMS_WEBHOOK_URL: ${{ vars.MS_TEAMS_WEBHOOK_URL }}
          
        # uses: jdcargile/ms-teams-notification@v1.4
        # with:
        #   github-token: ${{ github.token }} # this will use the runner's token.
        #   ms-teams-webhook-uri: ${{ vars.MS_TEAMS_WEBHOOK_URL }}
        #   notification-summary: Flutter Country Picker ${{ env.RESULTS }}
        #   notification-color: 17a2b8
        #   verbose-logging: true

        uses: neonidian/teams-notify-build-status@v3
        with:
          webhookUrl: |                                         # Send to multiple channels in MS Teams
            ${{ vars.MS_TEAMS_WEBHOOK_URL }}
          title: Flutter Country Picker                                      # Specify a title header
          titleBackgroundColor: success    # Specify title background color. 'unitTest' is the ID of a step
          status: success                  # Specify what should be displayed in the status label
          message:  \"Scanned Result ${{ env.RESULTS }}\"
        env:                                                     # Enable actor labels and buttons using environment variables
          SHOULD_DISPLAY_ACTOR_LABEL: true
          SHOULD_DISPLAY_VIEW_RUN_BUTTON: true
          SHOULD_DISPLAY_VIEW_COMMIT_BUTTON: true
